import sys
from PyQt5.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QLabel, QLineEdit,
    QPushButton, QTextEdit, QMessageBox
)
import math


class CifrasSignificativasApp(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Cifras Significativas y Redondeo")
        self.setGeometry(200, 200, 500, 600)

        layout = QVBoxLayout()

        # ==== TEOR√çA INICIAL QUE SE MUESTRA ====
        layout.addWidget(QLabel("üìò ¬øQu√© son las cifras significativas?"))
        layout.addWidget(QLabel("Son los d√≠gitos que aportan informaci√≥n √∫til sobre la precisi√≥n de un n√∫mero."))
        layout.addWidget(QLabel("Regla: redondear manteniendo solo los d√≠gitos significativos m√°s importantes."))

        layout.addWidget(QLabel("üî¢ Ingresa un n√∫mero:"))
        self.input_numero = QLineEdit("3.1415926535")  # valor por defecto
        layout.addWidget(self.input_numero)

        layout.addWidget(QLabel("üî¢ Cantidad de cifras significativas:"))
        self.input_cifras = QLineEdit("4")
        layout.addWidget(self.input_cifras)

        # Bot√≥n para redondear
        self.btn_redondear = QPushButton("Redondear")
        self.btn_redondear.clicked.connect(self.redondear)
        layout.addWidget(self.btn_redondear)

        # Campo de salida
        self.output = QTextEdit()
        self.output.setReadOnly(True)
        layout.addWidget(self.output)

        self.setLayout(layout)

    def redondear(self):
        try:
            # Leer entradas
            numero = float(self.input_numero.text())
            cifras = int(self.input_cifras.text())

            if numero == 0:
                redondeado = 0.0
            else:
                # C√°lculo matem√°tico para redondeo a cifras significativas
                digitos = cifras - int(math.floor(math.log10(abs(numero)))) - 1
                redondeado = round(numero, digitos)

            # Mostrar resultados explicativos
            resultado = (
                f"N√∫mero original: {numero}\n"
                f"Cifras significativas solicitadas: {cifras}\n"
                f"N√∫mero redondeado: {redondeado}\n\n"
                "‚úÖ Aplicando redondeo a cifras significativas se conservan √∫nicamente "
                "los d√≠gitos que m√°s contribuyen al valor real del n√∫mero."
            )
            self.output.setPlainText(resultado)

        except Exception as e:
            QMessageBox.critical(self, "Error", f"Error en entrada: {str(e)}")


# === EJECUCI√ìN DE LA APP ===
if __name__ == "__main__":
    app = QApplication(sys.argv)
    ventana = CifrasSignificativasApp()
    ventana.show()
    sys.exit(app.exec_())
